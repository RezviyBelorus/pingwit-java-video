package com.pingwit.part_13.point_1;

@SuppressWarnings("SpellCheckingInspection")
public class PrinciplesOOP {
    /*
    Принципы ООП:
    - Наследование
    - Абстракция
    - Инкапсуляция
    - Полиморфизм
     */

    /*
    Наследование.
    Наследование — механизм, который позволяет описать новый класс на основе существующего (родительского).
    При этом свойства и функциональность родительского класса распространяются на новый класс.

    Для чего нужно наследование и какие преимущества оно дает?

    Прежде всего — повторное использование кода. Поля и методы, описанные в родительских классах, можно использовать в классах-потомках.
     */

    /*
    Абстракция.
    Абстракция означает выделение главных, наиболее значимых характеристик предмета и наоборот — отбрасывание второстепенных, незначительных.
     */

    /*
    Инкапсуляция.
    С ним мы уже тоже сталкивались. Инкапсуляция в Java означает ограничение доступа к данным и возможностям их изменения.
    Как видишь, в его основе лежит слово «капсула». В эту «капсулу» мы прячем какие-то важные для нас данные, которые не хотим, чтобы кто-то менял.
     */

    /*
    Полиморфизм.
    Полиморфизм — это возможность работать с несколькими типами так, будто это один и тот же тип.
    При этом поведение объектов будет разным в зависимости от типа, к которому они принадлежат.
    Мне про полиморфизм нравится говорить как - один интерфейс и множество реализаций.
    Это, кстати, мы тоже с вами делали.
     */
}
